/**
 * A coloured triangle is created from a row of colours, each of which is red,
 * green or blue. Successive rows, each containing one fewer colour than the
 * last, are generated by considering the two touching colours in the previous
 * row. If these colours are identical, the same colour is used in the new row.
 * If they are different, the missing colour is used in the new row. This is
 * continued until the final row, with only a single colour, is generated.
 *
 * The different possibilities are:
 *
 * Colour here:        G G        B G        R G        B R
 * Becomes colour:      G          R          B          G
 *
 * With a bigger example:
 *
 * R R G B R G B B
 *  R B R G B R B
 *   G G B R G G
 *    G R G B G
 *     B B R R
 *      B G R
 *       R B
 *        G
 *
 * You will be given the first row of the triangle as a string and its your job
 * to return the final colour which would appear in the bottom row as a string.
 * In the case of the example above, you would the given RRGBRGBB you should
 * return G.
 */
export function solve(input: string): string {
  const arr = input.split("");
  let length = arr.length;
  while (length > 1) {
    for (let i = 0; i < length; i += 1) {
      const here = arr[i];
      const next = arr[i + 1];
      if (here === next) {
        continue;
      }
      arr[i] = {
        BG: "R",
        BR: "G",
        GB: "R",
        GR: "B",
        RB: "G",
        RG: "B",
      }[here + next]!;
    }
    length -= 1;
  }

  return arr[0];
}
